{"version":3,"sources":["utils.js","WebAPI.js","contexts.js","pages/LoginPage/LoginPage.js","components/Pagination/Pagination.js","pages/HomePage/HomePage.js","pages/PostPage/PostPage.js","pages/AboutMePage/AboutMePage.js","pages/NewPostPage/NewPostPage.js","pages/RegisterPage/RegisterPage.js","components/Header/Header.js","components/App/App.js","index.js"],"names":["TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","BASE_URL","getLimitPost","page","limit","fetch","then","res","json","getMe","headers","authorization","AuthContext","createContext","LoadingContext","ErrorMessage","styled","div","LoginPage","setUser","useContext","isLoading","setIsLoading","useState","username","setUsername","password","setPassword","errorMessage","setErrorMessage","history","useHistory","onSubmit","e","preventDefault","method","body","JSON","stringify","login","data","ok","message","response","toString","push","catch","err","value","onChange","target","type","PaginationContainer","PageButton","button","props","color","Pagination","setPosts","pageNumberCount","currentPage","setCurrentPage","map","onClick","posts","handleClickPage","Root","PostContainer","PostTitle","Link","PostDate","Post","post","to","id","title","Date","createdAt","toLocaleString","HomePage","setPageNumberCount","useEffect","allPages","Math","ceil","length","Array","from","_","i","PostBody","PostPage","setPost","useParams","getPost","AboutMe","AboutMePage","NewPostContainer","NewPostForm","form","NewPostHeader","NewPostTitle","NewPostTitleInput","input","NewPostBody","NewPostBodyTextarea","textarea","NewPostButtonWrapper","NewPostButton","NewPostPage","user","setTitle","setBody","postArticle","placeholder","rows","RegisterPage","nickname","setNickname","register","HeaderContainer","Brand","NavbarList","Nav","$active","LeftContainer","Header","location","useLocation","pathname","App","Provider","exact","path","ReactDOM","render","document","getElementById"],"mappings":"6LAAMA,EAAa,QAENC,EAAe,SAACC,GAC3B,OAAOC,aAAaC,QAAQJ,EAAYE,IAG7BG,EAAe,WAC1B,OAAOF,aAAaG,QAAQN,ICLxBO,EAAW,qCAYJC,EAAe,SAACC,EAAMC,GACjC,OAAOC,MAAM,GAAD,OACPJ,EADO,wBACiBE,EADjB,mBACgCC,EADhC,iCAEVE,MAAK,SAACC,GAAD,OAASA,EAAIC,WAgBTC,EAAQ,WACnB,IAAMb,EAAQG,IACd,OAAOM,MAAM,GAAD,OAAIJ,EAAJ,OAAmB,CAC7BS,QAAS,CACPC,cAAc,UAAD,OAAYf,MAE1BU,MAAK,SAACC,GAAD,OAASA,EAAIC,WCrCVI,EAAcC,wBAAc,MAC5BC,EAAiBD,wBAAc,M,sFCI5C,IAAME,EAAeC,IAAOC,IAAV,KAIH,SAASC,IAAa,IAC3BC,EAAYC,qBAAWR,GAAvBO,QAD0B,EAEEC,qBAAWN,GAAvCO,EAF0B,EAE1BA,UAAWC,EAFe,EAEfA,aAFe,EAGFC,mBAAS,IAHP,mBAG3BC,EAH2B,KAGjBC,EAHiB,OAIFF,mBAAS,IAJP,mBAI3BG,EAJ2B,KAIjBC,EAJiB,OAKMJ,qBALN,mBAK3BK,EAL2B,KAKbC,EALa,KAM5BC,EAAUC,cA+BhB,OACE,uBAAMC,SA9Ba,SAACC,GACpBA,EAAEC,iBACFL,EAAgB,MACZR,IACJC,GAAa,GFHI,SAACE,EAAUE,GAC9B,OAAOrB,MAAM,GAAD,OAAIJ,EAAJ,UAAsB,CAChCkC,OAAQ,OACRzB,QAAS,CACP,eAAgB,oBAElB0B,KAAMC,KAAKC,UAAU,CACnBd,WACAE,eAEDpB,MAAK,SAACC,GAAD,OAASA,EAAIC,UELnB+B,CAAMf,EAAUE,GAAUpB,MAAK,SAACkC,GAE9B,GADAlB,GAAa,GACG,IAAZkB,EAAKC,GACP,OAAOZ,EAAgBW,EAAKE,SAE9B/C,EAAa6C,EAAK5C,OAElBa,IACGH,MAAK,SAACqC,GACL,GAAoB,IAAhBA,EAASF,GAEX,OADA9C,EAAa,MACNkC,EAAgBc,EAASC,YAElCzB,EAAQwB,EAASH,MACjBV,EAAQe,KAAK,QAEdC,OAAM,SAACC,GAEN,OADAjB,EAAQe,KAAK,KACNhB,EAAgBkB,WAM7B,UACE,4CACY,IACV,uBACEC,MAAOxB,EACPyB,SAAU,SAAChB,GACTR,EAAYQ,EAAEiB,OAAOF,aAI3B,4CACY,IACV,uBACEG,KAAK,WACLH,MAAOtB,EACPuB,SAAU,SAAChB,GACTN,EAAYM,EAAEiB,OAAOF,aAI3B,kDACCpB,GAAgB,cAACb,EAAD,UAAea,O,6YCjEtC,IAAMwB,EAAsBpC,IAAOC,IAAV,KAInBoC,EAAarC,IAAOsC,OAAV,KAOA,SAACC,GAAD,OAAWA,EAAMC,SAOlB,SAASC,EAAT,GAA2D,IAArCC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,gBAAiBvD,EAAS,EAATA,MAAS,EACjCmB,mBAAS,GADwB,mBAChEqC,EADgE,KACnDC,EADmD,KAQvE,OACE,cAACT,EAAD,UACGO,EAAgBG,KAAI,SAAC3D,GAAD,OACnB,cAACkD,EAAD,CACEG,MACEI,IAAgBzD,EAAO,qBAAuB,qBAEhD4D,QAAS,kBAZO,SAAC5D,GACvBD,EAAaC,EAAMC,GAAOE,MAAK,SAAC0D,GAAD,OAAWN,EAASM,MACnDH,EAAe1D,GAUM8D,CAAgB9D,IAJjC,SAMGA,S,6iBChCX,IAAM+D,EAAOlD,IAAOC,IAAV,KAKJkD,EAAgBnD,IAAOC,IAAV,KAQbmD,EAAYpD,YAAOqD,IAAPrD,CAAH,KAMTsD,EAAWtD,IAAOC,IAAV,KAId,SAASsD,EAAT,GAAyB,IAATC,EAAQ,EAARA,KACd,OACE,eAACL,EAAD,WACE,cAACC,EAAD,CAAWK,GAAE,gBAAWD,EAAKE,IAA7B,SAAoCF,EAAKG,QACzC,cAACL,EAAD,UAAW,IAAIM,KAAKJ,EAAKK,WAAWC,sBAS3B,SAASC,IAAY,IAAD,EACG3D,qBAAWN,GAAvCO,EADyB,EACzBA,UAAWC,EADc,EACdA,aADc,EAEPC,mBAAS,IAFF,mBAE1ByC,EAF0B,KAEnBN,EAFmB,OAGanC,mBAAS,IAHtB,mBAG1BoC,EAH0B,KAGTqB,EAHS,KAkBjC,OAZAC,qBAAU,WACR3D,GAAa,GJ9CRjB,MAAM,GAAD,OAAIJ,EAAJ,uCAAkDK,MAAK,SAACC,GAAD,OACjEA,EAAIC,UI8COF,MAAK,SAAC0D,GACf,IAAMkB,EAAWC,KAAKC,KAAKpB,EAAMqB,OALvB,GAMVL,EAAmBM,MAAMC,KAAK,CAAEF,OAAQH,IAAY,SAACM,EAAGC,GAAJ,OAAUA,EAAI,SAEpEvF,EAAa,EARD,GAQWI,MAAK,SAAC0D,GAC3BN,EAASM,MAEX1C,GAAa,KACZ,CAACA,IAGF,cAAC4C,EAAD,WACI7C,GACA,qCACG2C,EAAMF,KAAI,SAACU,GAAD,OACT,cAACD,EAAD,CAAoBC,KAAMA,GAAfA,EAAKE,OAElB,cAACjB,EAAD,CACEC,SAAUA,EACVC,gBAAiBA,EACjBvD,MAxBI,S,0lBCzChB,IAAM8D,EAAOlD,IAAOC,IAAV,KAKJkD,EAAgBnD,IAAOC,IAAV,KAKbmD,EAAYpD,IAAOC,IAAV,KAITqD,EAAWtD,IAAOC,IAAV,KAMRyE,EAAW1E,IAAOC,IAAV,KAMd,SAASsD,EAAT,GAAyB,IAATC,EAAQ,EAARA,KACd,OACE,eAAC,EAAD,WACE,cAAC,EAAD,UAAYA,EAAKG,QACjB,cAAC,EAAD,UAAW,IAAIC,KAAKJ,EAAKK,WAAWC,mBACpC,cAACY,EAAD,UAAWlB,EAAKpC,UASP,SAASuD,IAAY,IAAD,EACTpE,mBAAS,MADA,mBAC1BiD,EAD0B,KACpBoB,EADoB,OAEGxE,qBAAWN,GAAvCO,EAFyB,EAEzBA,UAAWC,EAFc,EAEdA,aACXoD,EAAOmB,cAAPnB,GAUR,OARAO,qBAAU,WACR3D,GAAa,GL3CM,SAACoD,GACtB,OAAOrE,MAAM,GAAD,OAAIJ,EAAJ,qBAAyByE,IAAMpE,MAAK,SAACC,GAAD,OAASA,EAAIC,UK2C3DsF,CAAQpB,GAAIpE,MAAK,SAACkE,GAChBoB,EAAQpB,EAAK,IACblD,GAAa,QAEd,CAACoD,EAAIpD,IAED,cAAC,EAAD,WAAQD,GAAamD,EAAO,cAAC,EAAD,CAAMA,KAAMA,IAAW,K,wIC1D5D,IAAMuB,EAAU/E,IAAOC,IAAV,KAME,SAAS+E,IACtB,OACE,cAACD,EAAD,yI,+tCCJJ,IAAME,GAAmBjF,IAAOC,IAAV,MAQhBiF,GAAclF,IAAOmF,KAAV,MAEXC,GAAgBpF,IAAOC,IAAV,MAIboF,GAAerF,IAAOC,IAAV,MAIZqF,GAAoBtF,IAAOuF,MAAV,MAOjBC,GAAcxF,IAAOC,IAAV,MAIXwF,GAAsBzF,IAAO0F,SAAV,MAOnBC,GAAuB3F,IAAOC,IAAV,MAKpB2F,GAAgB5F,IAAOsC,OAAV,MAQbvC,GAAeC,IAAOC,IAAV,KAKH,SAAS4F,KAAe,IAC7BC,EAAS1F,qBAAWR,GAApBkG,KAD4B,EAGVvF,mBAAS,IAHC,mBAG7BoD,EAH6B,KAGtBoC,EAHsB,OAIZxF,mBAAS,IAJG,mBAI7Ba,EAJ6B,KAIvB4E,EAJuB,OAKIzF,qBALJ,mBAK7BK,EAL6B,KAKfC,EALe,KAM9BC,EAAUC,cAgBhB,OACE,cAACkE,GAAD,UACGa,EACC,eAACZ,GAAD,CAAalE,SAjBE,SAACC,GAGpB,OAFAA,EAAEC,iBACFL,EAAgB,MACX8C,GAAUvC,EAGV0E,OPhCkB,SAACnC,EAAOvC,GACjC,IAAMxC,EAAQG,IACd,OAAOM,MAAM,GAAD,OAAIJ,EAAJ,UAAsB,CAChCkC,OAAQ,OACRzB,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYf,IAE3BwC,KAAMC,KAAKC,UAAU,CACnBqC,QACAvC,WAED9B,MAAK,SAACC,GAAD,OAASA,EAAIC,UOwBnByG,CAAYtC,EAAOvC,GAAM9B,MAAK,WAC5BwB,EAAQe,KAAK,QAJNhB,EAAgB,wCAHhBA,EAAgB,iEAarB,UACE,cAACuE,GAAD,6CACCxE,GAAgB,cAAC,GAAD,UAAeA,IAChC,cAACyE,GAAD,UACE,cAACC,GAAD,CACEtD,MAAO2B,EACP1B,SAAU,SAAChB,GACT8E,EAAS9E,EAAEiB,OAAOF,QAEpBkE,YAAY,2CAGhB,cAACV,GAAD,UACE,cAACC,GAAD,CACEzD,MAAOZ,EACPa,SAAU,SAAChB,GACT+E,EAAQ/E,EAAEiB,OAAOF,QAEnBkE,YAAY,uCACZC,KAAM,OAGV,cAACR,GAAD,UACE,cAACC,GAAD,gCAIJ,cAAC,GAAD,uD,wFCzGR,IAAM7F,GAAeC,IAAOC,IAAV,MAIH,SAASmG,KAAgB,IAC9BjG,EAAYC,qBAAWR,GAAvBO,QAD6B,EAEDC,qBAAWN,GAAvCO,EAF6B,EAE7BA,UAAWC,EAFkB,EAElBA,aAFkB,EAGLC,mBAAS,IAHJ,mBAG9B8F,EAH8B,KAGpBC,EAHoB,OAIL/F,mBAAS,IAJJ,mBAI9BC,EAJ8B,KAIpBC,EAJoB,OAKLF,mBAAS,IALJ,mBAK9BG,EAL8B,KAKpBC,EALoB,OAMGJ,mBAAS,MANZ,mBAM9BK,EAN8B,KAMhBC,EANgB,KAO/BC,EAAUC,cA0BhB,OACE,uBAAMC,SAzBa,SAACC,GACpBA,EAAEC,iBACFL,EAAgB,MACZR,IACJC,GAAa,GRiCO,SAAC+F,EAAU7F,EAAUE,GAC3C,OAAOrB,MAAM,GAAD,OAAIJ,EAAJ,aAAyB,CACnCkC,OAAQ,OACRzB,QAAS,CACP,eAAgB,oBAElB0B,KAAMC,KAAKC,UAAU,CACnB+E,WACA7F,WACAE,eAEDpB,MAAK,SAACC,GAAD,OAASA,EAAIC,UQ1CnB+G,CAASF,EAAU7F,EAAUE,GAAUpB,MAAK,SAACkC,GAE3C,GADAlB,GAAa,GACG,IAAZkB,EAAKC,GACP,OAAOZ,EAAgBW,EAAKE,SAE9B/C,EAAa6C,EAAK5C,OAElBa,IAAQH,MAAK,SAACqC,GACZ,GAAoB,IAAhBA,EAASF,GAEX,OADA9C,EAAa,MACNkC,EAAgBc,EAASC,YAElCzB,EAAQwB,EAASH,MACjBV,EAAQe,KAAK,aAMjB,UACE,4CACY,IACV,uBACEG,MAAOqE,EACPpE,SAAU,SAAChB,GACTqF,EAAYrF,EAAEiB,OAAOF,aAI3B,4CACY,IACV,uBACEA,MAAOxB,EACPyB,SAAU,SAAChB,GACTR,EAAYQ,EAAEiB,OAAOF,aAI3B,4CACY,IACV,uBACEG,KAAK,WACLH,MAAOtB,EACPuB,SAAU,SAAChB,GACTN,EAAYM,EAAEiB,OAAOF,aAI3B,kDACCpB,GAAgB,cAAC,GAAD,UAAeA,O,sjCCrEtC,IAAM4F,GAAkBxG,IAAOC,IAAV,MAefwG,GAAQzG,IAAOC,IAAV,MAKLyG,GAAa1G,IAAOC,IAAV,MAMV0G,GAAM3G,YAAOqD,IAAPrD,CAAH,MAeL,SAACuC,GAAD,OACAA,EAAMqE,SAAN,yCAMEC,GAAgB7G,IAAOC,IAAV,KAIfyG,IAKW,SAASI,KAAU,IACxB3G,EAAYC,qBAAWR,GAAvBO,QACF4G,EAAWC,cACXlG,EAAUC,cAWhB,OACE,eAACyF,GAAD,WACE,eAACK,GAAD,WACE,cAACJ,GAAD,+DACA,eAACC,GAAD,WACE,cAACC,GAAD,CAAKlD,GAAG,IAAImD,QAA+B,MAAtBG,EAASE,SAA9B,0BAGA,cAACN,GAAD,CAAKlD,GAAG,YAAYmD,QAA+B,cAAtBG,EAASE,SAAtC,sCAKJ,cAACP,GAAD,UACG7H,aAAaD,MACZ,qCACE,cAAC+H,GAAD,CAAKlD,GAAG,WAAWmD,QAA+B,aAAtBG,EAASE,SAArC,sCAGA,cAACN,GAAD,CAAK5D,QA5BM,WACnBpE,EAAa,IACbwB,EAAQ,MAEkB,MAAtB4G,EAASE,UACXnG,EAAQe,KAAK,MAuBP,6BAGF,qCACE,cAAC8E,GAAD,CAAKlD,GAAG,YAAYmD,QAA+B,cAAtBG,EAASE,SAAtC,0BAGA,cAACN,GAAD,CAAKlD,GAAG,SAASmD,QAA+B,WAAtBG,EAASE,SAAnC,kC,+FCxFZ,IAAM/D,GAAOlD,IAAOC,IAAV,MAiDKiH,OA7Cf,WAAgB,IAAD,EACW3G,mBAAS,MADpB,mBACNuF,EADM,KACA3F,EADA,OAEqBI,oBAAS,GAF9B,mBAENF,EAFM,KAEKC,EAFL,KAYb,OARA2D,qBAAU,WACRxE,IAAQH,MAAK,SAACqC,GACRA,EAASF,IACXtB,EAAQwB,EAASH,WAGpB,IAGD,cAAC5B,EAAYuH,SAAb,CAAsBnF,MAAO,CAAE8D,OAAM3F,WAArC,SACE,cAAC,GAAD,UACE,cAACL,EAAeqH,SAAhB,CAAyBnF,MAAO,CAAE3B,YAAWC,gBAA7C,SACE,eAAC,IAAD,WACE,cAACwG,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,IAAlB,SACE,cAACtD,EAAD,MAEF,cAAC,IAAD,CAAOsD,KAAK,YAAZ,SACE,cAACjB,GAAD,MAEF,cAAC,IAAD,CAAOiB,KAAK,SAAZ,SACE,cAACnH,EAAD,MAEF,cAAC,IAAD,CAAOmH,KAAK,YAAZ,SACE,cAAC1C,EAAD,MAEF,cAAC,IAAD,CAAO0C,KAAK,WAAZ,SACE,cAACxB,GAAD,MAEF,cAAC,IAAD,CAAOwB,KAAK,YAAZ,SACE,cAACrC,EAAD,mBClDhBsC,IAASC,OAAO,cAAC,GAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f4d3cb5e.chunk.js","sourcesContent":["const TOKEN_NAME = \"token\";\n\nexport const setAuthToken = (token) => {\n  return localStorage.setItem(TOKEN_NAME, token);\n};\n\nexport const getAuthToken = () => {\n  return localStorage.getItem(TOKEN_NAME);\n};\n","import { getAuthToken } from \"./utils\";\n\nconst BASE_URL = \"https://student-json-api.lidemy.me\";\n\nexport const getPosts = () => {\n  return fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`).then((res) =>\n    res.json()\n  );\n};\n\nexport const getPost = (id) => {\n  return fetch(`${BASE_URL}/posts?id=${id}`).then((res) => res.json());\n};\n\nexport const getLimitPost = (page, limit) => {\n  return fetch(\n    `${BASE_URL}/posts?_page=${page}&_limit=${limit}&_sort=createdAt&_order=desc`\n  ).then((res) => res.json());\n};\n\nexport const login = (username, password) => {\n  return fetch(`${BASE_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      username,\n      password,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const getMe = () => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/me`, {\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  }).then((res) => res.json());\n};\n\nexport const postArticle = (title, body) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({\n      title,\n      body,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const register = (nickname, username, password) => {\n  return fetch(`${BASE_URL}/register`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      nickname,\n      username,\n      password,\n    }),\n  }).then((res) => res.json());\n};\n","import { createContext } from \"react\";\n\nexport const AuthContext = createContext(null);\nexport const LoadingContext = createContext(null);\n","import React, { useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport { login, getMe } from \"../../WebAPI\";\nimport { setAuthToken } from \"../../utils\";\nimport { AuthContext, LoadingContext } from \"../../contexts\";\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\nexport default function LoginPage() {\n  const { setUser } = useContext(AuthContext);\n  const { isLoading, setIsLoading } = useContext(LoadingContext);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState();\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setErrorMessage(null);\n    if (isLoading) return;\n    setIsLoading(true);\n\n    login(username, password).then((data) => {\n      setIsLoading(false);\n      if (data.ok === 0) {\n        return setErrorMessage(data.message);\n      }\n      setAuthToken(data.token);\n\n      getMe()\n        .then((response) => {\n          if (response.ok !== 1) {\n            setAuthToken(null);\n            return setErrorMessage(response.toString());\n          }\n          setUser(response.data);\n          history.push(\"/\");\n        })\n        .catch((err) => {\n          history.push(\"/\");\n          return setErrorMessage(err);\n        });\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        username:{\" \"}\n        <input\n          value={username}\n          onChange={(e) => {\n            setUsername(e.target.value);\n          }}\n        />\n      </div>\n      <div>\n        password:{\" \"}\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(e) => {\n            setPassword(e.target.value);\n          }}\n        />\n      </div>\n      <button>登入</button>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </form>\n  );\n}\n","import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { getLimitPost } from \"../../WebAPI\";\n\nconst PaginationContainer = styled.div`\n  margin: 20px auto;\n  text-align: center;\n`;\nconst PageButton = styled.button`\n  border: 0.5px solid #ddd;\n  font-size: 16px;\n  padding: 5px 10px;\n  margin: 0 10px;\n  cursor: pointer;\n  border-radius: 8px;\n  background: ${(props) => props.color};\n\n  &:hover {\n    background: rgba(0, 0, 0, 0.4);\n  }\n`;\n\nexport default function Pagination({ setPosts, pageNumberCount, limit }) {\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const handleClickPage = (page) => {\n    getLimitPost(page, limit).then((posts) => setPosts(posts));\n    setCurrentPage(page);\n  };\n\n  return (\n    <PaginationContainer>\n      {pageNumberCount.map((page) => (\n        <PageButton\n          color={\n            currentPage === page ? \"rgba(0, 0, 0, 0.4)\" : \"rgba(0, 0, 0, 0.1)\"\n          }\n          onClick={() => handleClickPage(page)}\n        >\n          {page}\n        </PageButton>\n      ))}\n    </PaginationContainer>\n  );\n}\n\nPagination.propTypes = {\n  setPosts: PropTypes.func,\n  pageNumberCount: PropTypes.array,\n  limit: PropTypes.number,\n};\n","import React, { useState, useEffect, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { getPosts, getLimitPost } from \"../../WebAPI\";\nimport Pagination from \"../../components/Pagination/\";\nimport { LoadingContext } from \"../../contexts\";\n\nconst Root = styled.div`\n  width: 80%;\n  margin: 0 auto;\n`;\n\nconst PostContainer = styled.div`\n  border-bottom: 1px solid rgba(0, 12, 34, 0.2);\n  padding: 16px;\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n`;\n\nconst PostTitle = styled(Link)`\n  font-size: 24px;\n  color: #333;\n  text-decoration: none;\n`;\n\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.8);\n`;\n\nfunction Post({ post }) {\n  return (\n    <PostContainer>\n      <PostTitle to={`/post/${post.id}`}>{post.title}</PostTitle>\n      <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n    </PostContainer>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.object,\n};\n\nexport default function HomePage() {\n  const { isLoading, setIsLoading } = useContext(LoadingContext);\n  const [posts, setPosts] = useState([]);\n  const [pageNumberCount, setPageNumberCount] = useState([]);\n  const limit = 5;\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPosts().then((posts) => {\n      const allPages = Math.ceil(posts.length / limit);\n      setPageNumberCount(Array.from({ length: allPages }, (_, i) => i + 1));\n    });\n    getLimitPost(1, limit).then((posts) => {\n      setPosts(posts);\n    });\n    setIsLoading(false);\n  }, [setIsLoading]);\n\n  return (\n    <Root>\n      {!isLoading && (\n        <>\n          {posts.map((post) => (\n            <Post key={post.id} post={post} />\n          ))}\n          <Pagination\n            setPosts={setPosts}\n            pageNumberCount={pageNumberCount}\n            limit={limit}\n          />\n        </>\n      )}\n    </Root>\n  );\n}\n","import React, { useState, useEffect, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { useParams } from \"react-router-dom\";\nimport { getPost } from \"../../WebAPI\";\nimport { LoadingContext } from \"../../contexts\";\n\nconst Root = styled.div`\n  width: 60%;\n  margin: 0 auto;\n`;\n\nconst PostContainer = styled.div`\n  border: 1px solid #333;\n  padding: 10px 15px;\n`;\n\nconst PostTitle = styled.div`\n  font-size: 26px;\n`;\n\nconst PostDate = styled.div`\n  border-bottom: 1px solid #333;\n  margin: 10px 0px;\n  font-size: 14px;\n`;\n\nconst PostBody = styled.div`\n  word-break: break-word;\n  font-size: 18px;\n  margin-top: 15px;\n`;\n\nfunction Post({ post }) {\n  return (\n    <PostContainer>\n      <PostTitle>{post.title}</PostTitle>\n      <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n      <PostBody>{post.body}</PostBody>\n    </PostContainer>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.object,\n};\n\nexport default function PostPage() {\n  const [post, setPost] = useState(null);\n  const { isLoading, setIsLoading } = useContext(LoadingContext);\n  const { id } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPost(id).then((post) => {\n      setPost(post[0]);\n      setIsLoading(false);\n    });\n  }, [id, setIsLoading]);\n\n  return <Root>{!isLoading && post ? <Post post={post} /> : \"\"}</Root>;\n}\n","import styled from \"styled-components\";\n\nconst AboutMe = styled.div`\n  font-size: 32px;\n  margin: 20px auto;\n  text-align: center;\n`;\n\nexport default function AboutMePage() {\n  return (\n    <AboutMe>這是程式導師計畫第四期的 React 部落格作業 by ericcch24</AboutMe>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../contexts\";\nimport { postArticle } from \"../../WebAPI\";\n\nconst NewPostContainer = styled.div`\n  margin: 10px auto;\n  width: 900px;\n  padding: 30px;\n  border: 1px solid black;\n  box-sizing: border-box;\n`;\n\nconst NewPostForm = styled.form``;\n\nconst NewPostHeader = styled.div`\n  font-size: 20px;\n`;\n\nconst NewPostTitle = styled.div`\n  margin-top: 20px;\n`;\n\nconst NewPostTitleInput = styled.input`\n  width: 98%;\n  padding: 6px;\n  font-size: 100%;\n  font-family: inherit;\n`;\n\nconst NewPostBody = styled.div`\n  margin-top: 30px;\n`;\n\nconst NewPostBodyTextarea = styled.textarea`\n  width: 98%;\n  padding: 6px;\n  font-family: inherit;\n  font-size: 100%;\n`;\n\nconst NewPostButtonWrapper = styled.div`\n  text-align: right;\n  margin-top: 20px;\n`;\n\nconst NewPostButton = styled.button`\n  display: inline-block;\n  cursor: pointer;\n  padding: 10px 30px;\n  font-family: inherit;\n  font-size: 100%;\n`;\n\nconst ErrorMessage = styled.div`\n  margin-top: 10px;\n  color: red;\n`;\n\nexport default function NewPostPage() {\n  const { user } = useContext(AuthContext);\n\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState();\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setErrorMessage(null);\n    if (!title || !body) {\n      return setErrorMessage(\"請輸入文章標題與內容\");\n    }\n    if (!user) {\n      return setErrorMessage(\"請登入後繼續\");\n    }\n\n    postArticle(title, body).then(() => {\n      history.push(\"/\");\n    });\n  };\n  return (\n    <NewPostContainer>\n      {user ? (\n        <NewPostForm onSubmit={handleSubmit}>\n          <NewPostHeader>發布文章：</NewPostHeader>\n          {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n          <NewPostTitle>\n            <NewPostTitleInput\n              value={title}\n              onChange={(e) => {\n                setTitle(e.target.value);\n              }}\n              placeholder=\"輸入文章標題\"\n            />\n          </NewPostTitle>\n          <NewPostBody>\n            <NewPostBodyTextarea\n              value={body}\n              onChange={(e) => {\n                setBody(e.target.value);\n              }}\n              placeholder=\"輸入文章內容\"\n              rows={20}\n            />\n          </NewPostBody>\n          <NewPostButtonWrapper>\n            <NewPostButton>送出</NewPostButton>\n          </NewPostButtonWrapper>\n        </NewPostForm>\n      ) : (\n        <ErrorMessage>\"請登入後繼續\"</ErrorMessage>\n      )}\n    </NewPostContainer>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport { getMe, register } from \"../../WebAPI\";\nimport { setAuthToken } from \"../../utils\";\nimport { AuthContext, LoadingContext } from \"../../contexts\";\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\nexport default function RegisterPage() {\n  const { setUser } = useContext(AuthContext);\n  const { isLoading, setIsLoading } = useContext(LoadingContext);\n  const [nickname, setNickname] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setErrorMessage(null);\n    if (isLoading) return;\n    setIsLoading(true);\n\n    register(nickname, username, password).then((data) => {\n      setIsLoading(false);\n      if (data.ok === 0) {\n        return setErrorMessage(data.message);\n      }\n      setAuthToken(data.token);\n\n      getMe().then((response) => {\n        if (response.ok !== 1) {\n          setAuthToken(null);\n          return setErrorMessage(response.toString());\n        }\n        setUser(response.data);\n        history.push(\"/\");\n      });\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        nickname:{\" \"}\n        <input\n          value={nickname}\n          onChange={(e) => {\n            setNickname(e.target.value);\n          }}\n        />\n      </div>\n      <div>\n        username:{\" \"}\n        <input\n          value={username}\n          onChange={(e) => {\n            setUsername(e.target.value);\n          }}\n        />\n      </div>\n      <div>\n        password:{\" \"}\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(e) => {\n            setPassword(e.target.value);\n          }}\n        />\n      </div>\n      <button>註冊</button>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </form>\n  );\n}\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../contexts\";\nimport { setAuthToken } from \"../../utils\";\n\nconst HeaderContainer = styled.div`\n  height: 64px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n  padding: 0px 32px;\n  box-sizing: border-box;\n  background: white;\n`;\n\nconst Brand = styled.div`\n  font-size: 32px;\n  font-weight: bold;\n`;\n\nconst NavbarList = styled.div`\n  display: flex;\n  align-items: center;\n  height: 64px;\n`;\n\nconst Nav = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  box-sizing: border-box;\n  width: 100px;\n  cursor: pointer;\n  color: black;\n  text-decoration: none;\n\n  &:hover {\n    background: rgba(0, 0, 0, 0.1);\n  }\n\n  ${(props) =>\n    props.$active &&\n    `\n  background: rgba(0,0,0,0.1)\n  `};\n`;\n\nconst LeftContainer = styled.div`\n  display: flex;\n  align-items: center;\n\n  ${NavbarList} {\n    margin-left: 64px;\n  }\n`;\n\nexport default function Header() {\n  const { setUser } = useContext(AuthContext);\n  const location = useLocation();\n  const history = useHistory();\n\n  const handleLogout = () => {\n    setAuthToken(\"\");\n    setUser(null);\n\n    if (location.pathname !== \"/\") {\n      history.push(\"/\");\n    }\n  };\n\n  return (\n    <HeaderContainer>\n      <LeftContainer>\n        <Brand>我的第一個部落格</Brand>\n        <NavbarList>\n          <Nav to=\"/\" $active={location.pathname === \"/\"}>\n            首頁\n          </Nav>\n          <Nav to=\"/about-me\" $active={location.pathname === \"/about-me\"}>\n            關於我\n          </Nav>\n        </NavbarList>\n      </LeftContainer>\n      <NavbarList>\n        {localStorage.token ? (\n          <>\n            <Nav to=\"/newpost\" $active={location.pathname === \"/newpost\"}>\n              發布文章\n            </Nav>\n            <Nav onClick={handleLogout}>登出</Nav>\n          </>\n        ) : (\n          <>\n            <Nav to=\"/register\" $active={location.pathname === \"/register\"}>\n              註冊\n            </Nav>\n            <Nav to=\"/login\" $active={location.pathname === \"/login\"}>\n              登入\n            </Nav>\n          </>\n        )}\n      </NavbarList>\n    </HeaderContainer>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport {\n  LoginPage,\n  HomePage,\n  PostPage,\n  AboutMePage,\n  NewPostPage,\n  RegisterPage,\n} from \"../../pages/\";\nimport Header from \"../Header/\";\nimport { AuthContext, LoadingContext } from \"../../contexts\";\nimport { getMe } from \"../../WebAPI\";\n\nconst Root = styled.div`\n  padding-top: 64px;\n`;\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    getMe().then((response) => {\n      if (response.ok) {\n        setUser(response.data);\n      }\n    });\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user, setUser }}>\n      <Root>\n        <LoadingContext.Provider value={{ isLoading, setIsLoading }}>\n          <Router>\n            <Header />\n            <Switch>\n              <Route exact path=\"/\">\n                <HomePage />\n              </Route>\n              <Route path=\"/register\">\n                <RegisterPage />\n              </Route>\n              <Route path=\"/login\">\n                <LoginPage />\n              </Route>\n              <Route path=\"/post/:id\">\n                <PostPage />\n              </Route>\n              <Route path=\"/newpost\">\n                <NewPostPage />\n              </Route>\n              <Route path=\"/about-me\">\n                <AboutMePage />\n              </Route>\n            </Switch>\n          </Router>\n        </LoadingContext.Provider>\n      </Root>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}